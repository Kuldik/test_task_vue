// 1. Каким будет результат следующей операции на языке JavaScript: [1, 2, 3] + [4, 5, 6]. Почему был получен такой результат?
let arr1 = [1, 2, 3];
let arr2 = [4, 5, 6];
let arr3 = arr1 + arr2;
console.log(arr3);
// Вывод в консоль будет следующим: 1,2,34,5,6. Вывод объясяется тем что при сложении двух массивов их содержимое конвертируется в строку.

// ---------------------------------------------------------------------------------

// 2.Дано выражение:
var a = {b: 1};
var b = a;
b.b = 2;
console.log(a);
// Что будет выведено в консоли? Почему был получен такой результат?
// Будет выведено {b: 2} потому что вложенный объект b является ссылочным. И соответственно, изменения вложенного объекта в переменной b изменят значение вложенного объекта в переменной a.

// ---------------------------------------------------------------------------------

// 3.Написать регулярное выражение, совпадающее с числом с плавающей точкой с точностью до 3 знака после запятой.
// ^[-+]?[0-9]*\.?[0-9]{1,3}$

// Этот регулярный выражение допускает числа с плавающей точкой в формате +/-[0-9]*.[0-9]{1,3}, где [-+]? 
// представляет собой необязательный знак + или -, [0-9]* представляет собой необязательное целое число, 
// а \.?[0-9]{1,3} представляет собой необязательную точку и не более 3 цифры после точки.

// ---------------------------------------------------------------------------------

// 4. Написать регулярное выражение, по которому определяется является ли строка ссылкой. Объяснить, как оно работает.

// Пример:
// const isURL = str => true
// isURL(‘https://example.com’)
// isURL(‘http://www.example.com’)

// ^https?:\/\/[^\s/$.?#].[^\s]*$

// ^ - указывает на начало строки
// https? - указывает на возможность использования протокола HTTP или HTTPS
// :\/\/ - указывает на использование двоеточия и косой черты для разделения протокола и домена
// [^\s/$.?#] - указывает на любой символ, кроме пробела, косой черты, точки, вопроского знака и символа #
// [^\s]* - указывает на любое количество символов, кроме пробела
// $ - указывает на конец строки

const isURL = str => /^https?:\/\/[^\s/$.?#].[^\s]*$/.test(str);

console.log(isURL('https://example.com')); // true
console.log(isURL('http://www.example.com')); // true
console.log(isURL('http://example.com/path anchor')); // false (содержит пробел)
console.log(isURL('example')); // false (не указан протокол)


// ---------------------------------------------------------------------------------

// 5. Каким будет значение переменной text после выполнения данного JavaScript кода? 
function setText(message) { 
    text = message;
}
var text = 'Текст';
setText('Сообщение');
// Опишите, почему получился такой результат.
// В коде переменная text объявляется с использованием ключевого слова var, что делает ее глобальной переменной. Это означает, что она доступна и может быть изменена из любой части кода.
// Функция setText определена для присвоения нового значения глобальной переменной text. При вызове функции с аргументом 'Сообщение' значение глобальной переменной text изменяется на 'Сообщение'.
// Таким образом, после выполнения кода значение переменной text будет 'Сообщение'.

// ---------------------------------------------------------------------------------

// 5.Написать функцию для получения список всех артикулов товаров в консоли браузера на странице https://groupprice.ru/categories/jenskaya-odejda?referer_from=main_catalog
function getAllArticles() {
    const articles = [];
    const products = document.querySelectorAll("._product");
    
    for (const product of products) {
      articles.push(`0${product.dataset.id}`);
    }
    
    console.log(articles);
}
// getAllArticles()
// https://github.com/Kuldik/test_task_vue/blob/main/screenshots/Screenshot%202024-08-05%20215335.png

// ---------------------------------------------------------------------------------

// 6.Написать функцию для получения всех характеристики товара в консоли браузера в виде объекта в формате attributeName: value на странице https://nir-vanna.ru/product/smesitel-bravat-art-f175109c-dlya-rakoviny/
function getAllParameters() {
    const productParameters = {};
  
    const parameters = document.querySelectorAll(".tab-pane-product-parameter-item");
  
    for (const parameter of parameters) {
      const attributeName = parameter.querySelector(".parameter-name").textContent.split("\n")[1].trim();
      const attributeValue = parameter.querySelector(".parameter-value").textContent.trim();
  
      productParameters[attributeName] = attributeValue;
    }
  
    console.log(productParameters);
}
// getAllParameters();
// https://github.com/Kuldik/test_task_vue/blob/main/screenshots/Screenshot%202024-08-05%20220509.png